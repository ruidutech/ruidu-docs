import{_ as p,C as h,c as o,o as d,ae as e,j as s,G as a,w as l,a as n}from"./chunks/framework.Asma3tvo.js";const r="/ruidu-docs/images/dr01-dev/status-transition.png",V=JSON.parse('{"title":"机器人状态相关功能","description":"","frontmatter":{},"headers":[],"relativePath":"dr01-dev/api/robot-state.md","filePath":"dr01-dev/api/robot-state.md"}'),k={name:"dr01-dev/api/robot-state.md"},g={tabindex:"0"},E={style:{"text-align":"left"}},u={style:{"text-align":"center"}},y={tabindex:"0"},C={style:{"text-align":"left"}},F={style:{"text-align":"center"}},q={tabindex:"0"},x={style:{"text-align":"left"}},b={style:{"text-align":"center"}},f={tabindex:"0"},c={style:{"text-align":"left"}},_={style:{"text-align":"center"}};function B(m,t,v,T,P,S){const i=h("nobr");return d(),o("div",null,[t[17]||(t[17]=e('<h1 id="机器人状态相关功能" tabindex="-1">机器人状态相关功能 <a class="header-anchor" href="#机器人状态相关功能" aria-label="Permalink to &quot;机器人状态相关功能&quot;">​</a></h1><h2 id="功能说明" tabindex="-1">功能说明 <a class="header-anchor" href="#功能说明" aria-label="Permalink to &quot;功能说明&quot;">​</a></h2><p>控制和获取机器人当前运行状态</p><h2 id="接口列表" tabindex="-1">接口列表 <a class="header-anchor" href="#接口列表" aria-label="Permalink to &quot;接口列表&quot;">​</a></h2><ul><li><a href="#切换机器人状态">切换机器人状态</a></li><li><a href="#获取机器人状态">获取机器人状态</a></li></ul><h2 id="接口详情" tabindex="-1">接口详情 <a class="header-anchor" href="#接口详情" aria-label="Permalink to &quot;接口详情&quot;">​</a></h2><h3 id="切换机器人状态" tabindex="-1">切换机器人状态 <a class="header-anchor" href="#切换机器人状态" aria-label="Permalink to &quot;切换机器人状态&quot;">​</a></h3><p><strong>简要描述:</strong> 大多数接口有状态限制，如建图状态时无法调用定位初始化功能等，所以需要根据当前接口同步界面状态，跳转到指定页面。该接口可以切换机器人当前状态，选择打开的模块。</p><p><strong>接口版本:</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">版本号</th><th style="text-align:center;">制定日期</th><th style="text-align:center;">修订日期</th></tr></thead><tbody><tr><td style="text-align:left;">1.0.0</td><td style="text-align:center;">2020-6-10</td><td style="text-align:center;">2020-6-10</td></tr></tbody></table><p><strong>状态限制:</strong> 无</p><p><strong>状态跳转至:</strong> 无</p><p><strong>请求URL:</strong></p><ul><li><code>http://机器人IP:端口号/robot/cmd/change_robot_state?state=</code></li></ul><p><strong>请求方式:</strong></p><ul><li>GET</li><li>POST</li></ul><p><strong>请求头:</strong></p>',17)),s("table",g,[s("thead",null,[s("tr",null,[s("th",E,[a(i,null,{default:l(()=>t[0]||(t[0]=[n("参数名")])),_:1})]),s("th",u,[a(i,null,{default:l(()=>t[1]||(t[1]=[n("是否必须")])),_:1})]),t[2]||(t[2]=s("th",{style:{"text-align":"center"}},"类型",-1)),t[3]||(t[3]=s("th",{style:{"text-align":"left"}},"说明",-1))])])]),t[18]||(t[18]=s("p",null,[s("strong",null,"请求参数:")],-1)),s("table",y,[s("thead",null,[s("tr",null,[s("th",C,[a(i,null,{default:l(()=>t[4]||(t[4]=[n("参数名")])),_:1})]),s("th",F,[a(i,null,{default:l(()=>t[5]||(t[5]=[n("是否必须")])),_:1})]),t[6]||(t[6]=s("th",{style:{"text-align":"center"}},"类型",-1)),t[7]||(t[7]=s("th",{style:{"text-align":"left"}},"说明",-1))])]),t[8]||(t[8]=s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"left"}},"state"),s("td",{style:{"text-align":"center"}},"是"),s("td",{style:{"text-align":"center"}},"string"),s("td",{style:{"text-align":"left"}},'发送需要切换的机器人状态，"Idle"，"Mapping"，"RunningTask"，"Localization"，"Sleep"，"FollowTarget"')])],-1))]),t[19]||(t[19]=e('<p><strong>机器人的状态切换如下图所示:</strong></p><p><img src="'+r+`" alt="状态切换图"></p><p><strong>特别注意:</strong> 不要在导航过程中进行地图管理、虚拟墙相关的功能的操作，以防止调用的过程占用机器的计算资源导致导航失效</p><p><strong>返回示例:</strong></p><p>正确时返回:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;errorCode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;msg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;successed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>错误时返回:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;errorCode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;msg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;successed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;successed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>返回参数说明:</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">errorCode</td><td style="text-align:left;">int</td><td style="text-align:left;">错误代码</td></tr><tr><td style="text-align:left;">state_initialized</td><td style="text-align:left;">bool</td><td style="text-align:left;">是否初始化</td></tr><tr><td style="text-align:left;">state_operation</td><td style="text-align:left;">string</td><td style="text-align:left;">状态字符串: &quot;Idle&quot;:空闲状态，&quot;Mapping&quot;:建图模块开启，&quot;RunningTask&quot;:导航模块开启</td></tr></tbody></table><p><strong>备注:</strong> 更多返回错误代码请看首页的错误代码描述</p><h3 id="获取机器人状态" tabindex="-1">获取机器人状态 <a class="header-anchor" href="#获取机器人状态" aria-label="Permalink to &quot;获取机器人状态&quot;">​</a></h3><p><strong>简要描述:</strong> 大多数接口有状态限制，如建图状态时无法调用定位初始化功能等，所以需要根据当前接口同步界面状态，跳转到指定页面。</p><p><strong>接口版本:</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">版本号</th><th style="text-align:center;">制定日期</th><th style="text-align:center;">修订日期</th></tr></thead><tbody><tr><td style="text-align:left;">1.0.0</td><td style="text-align:center;">2020-4-23</td><td style="text-align:center;">2020-4-23</td></tr></tbody></table><p><strong>状态限制:</strong> 无</p><p><strong>状态跳转至:</strong> 无</p><p><strong>请求URL:</strong></p><ul><li><code>http://机器人IP:端口号/robot/cmd/get_robot_state</code></li></ul><p><strong>请求方式:</strong></p><ul><li>GET</li><li>POST</li></ul><p><strong>请求头:</strong></p>`,22)),s("table",q,[s("thead",null,[s("tr",null,[s("th",x,[a(i,null,{default:l(()=>t[9]||(t[9]=[n("参数名")])),_:1})]),s("th",b,[a(i,null,{default:l(()=>t[10]||(t[10]=[n("是否必须")])),_:1})]),t[11]||(t[11]=s("th",{style:{"text-align":"center"}},"类型",-1)),t[12]||(t[12]=s("th",{style:{"text-align":"left"}},"说明",-1))])])]),t[20]||(t[20]=s("p",null,[s("strong",null,"请求参数:")],-1)),s("table",f,[s("thead",null,[s("tr",null,[s("th",c,[a(i,null,{default:l(()=>t[13]||(t[13]=[n("参数名")])),_:1})]),s("th",_,[a(i,null,{default:l(()=>t[14]||(t[14]=[n("是否必须")])),_:1})]),t[15]||(t[15]=s("th",{style:{"text-align":"center"}},"类型",-1)),t[16]||(t[16]=s("th",{style:{"text-align":"left"}},"说明",-1))])])]),t[21]||(t[21]=e(`<p><strong>请求参数:</strong> 无</p><p><strong>返回示例:</strong></p><p>正确时返回:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;errorCode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;msg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;successed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;state_initialized&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;state_operation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Idle&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;successed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>错误时返回:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;errorCode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;msg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;successed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>返回参数说明:</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">参数名</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">errorCode</td><td style="text-align:left;">int</td><td style="text-align:left;">错误代码</td></tr><tr><td style="text-align:left;">state_initialized</td><td style="text-align:left;">bool</td><td style="text-align:left;">是否初始化</td></tr><tr><td style="text-align:left;">state_operation</td><td style="text-align:left;">string</td><td style="text-align:left;">状态字符串: &quot;Idle&quot;:空闲状态，&quot;Mapping&quot;:建图模块开启，&quot;RunningTask&quot;:导航模块开启</td></tr></tbody></table><p><strong>备注:</strong> 更多返回错误代码请看首页的错误代码描述</p>`,9))])}const j=p(k,[["render",B]]);export{V as __pageData,j as default};
