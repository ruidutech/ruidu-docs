import{_ as t}from"./chunks/plus.s75sSGIW.js";import{_ as s,c as i,o as r,ak as a}from"./chunks/framework.DaqVj_Bu.js";const c="/ruidu-docs/images/orbitcontrol/user-guide/sites-panel-site-list.png",d="/ruidu-docs/images/orbitcontrol/user-guide/sites-panel-site-edit.png",l="/ruidu-docs/icons/crosshair.svg",e="/ruidu-docs/icons/trash-2.svg",P=JSON.parse('{"title":"站点管理","description":"","frontmatter":{},"headers":[],"relativePath":"orbitcontrol/user-guide/sites.md","filePath":"orbitcontrol/user-guide/sites.md"}'),n={name:"orbitcontrol/user-guide/sites.md"};function p(_,o,m,u,g,h){return r(),i("div",null,o[0]||(o[0]=[a('<h1 id="站点管理" tabindex="-1">站点管理 <a class="header-anchor" href="#站点管理" aria-label="Permalink to &quot;站点管理&quot;">​</a></h1><p><code>站点</code> 是一个逻辑概念，是为了让我们更加方便的进行设备管理和权限控制，一个站点可以小到是一个园区，也可以大到是一个行政区域。</p><p><code>设备</code>、<code>任务</code>、<code>地图</code>、<code>用户</code> 都与站点关联，用户只能在站点范围内进行管理。</p><h2 id="站点列表" tabindex="-1">站点列表 <a class="header-anchor" href="#站点列表" aria-label="Permalink to &quot;站点列表&quot;">​</a></h2><p>点击 <code>菜单</code> -&gt; <code>站点</code>，打开站点列表页面，因站点会与地图有所交互，包括：取 Location，显示站点相关标注信息等，所以站点列表和维护页面以<strong>左侧抽屉式面板</strong>呈现。</p><p><img src="'+c+'" alt=""></p><h2 id="新建-编辑站点" tabindex="-1">新建/编辑站点 <a class="header-anchor" href="#新建-编辑站点" aria-label="Permalink to &quot;新建/编辑站点&quot;">​</a></h2><p><img src="'+d+'" alt="" class="panel"></p><ol><li>点击 <img src="'+l+'" alt=""> 后，在地图上选择一个点作为站点的中心点，可以不是物理意义上的绝对中心，主要用来快速定位站点。</li><li>在地图上进行标注，三个图标分别表示 <code>区域标注</code>、<code>线形标注</code>、<code>点位标注</code>，在地图中操作结束后，显示在下方列表中，点击 <img src="'+e+'" alt=""> 删除</li><li>关联设备，表示从属关系，点击 <img src="'+t+'" alt=""> 添加，点击 <img src="'+e+'" alt=""> 删除，名称前的图标表示在线状态</li><li>关联用户，表示管理关系，点击 <img src="'+t+'" alt=""> 添加，点击 <img src="'+e+'" alt=""> 删除</li></ol>',9)]))}const k=s(n,[["render",p]]);export{P as __pageData,k as default};
