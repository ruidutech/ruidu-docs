import{_ as u,C as e,c,o as p,ak as r,G as a,w as o,j as l,a as t}from"./chunks/framework.DaqVj_Bu.js";const h="/ruidu-docs/images/orbitcontrol/user-guide/planning-panel-missions.png",g="/ruidu-docs/icons/waypoints.svg",m="/ruidu-docs/icons/diamond.svg",d="/ruidu-docs/icons/plus.svg",_="/ruidu-docs/images/orbitcontrol/user-guide/planning-panel-mission-edit.gif",b="/ruidu-docs/icons/map-pin-plus.svg",f="/ruidu-docs/images/orbitcontrol/user-guide/planning-action-mission-record.png",q="/ruidu-docs/images/orbitcontrol/user-guide/planning-panel-schedule.png",P="/ruidu-docs/images/orbitcontrol/user-guide/planning-dialog-schedule-new.png",V=JSON.parse('{"title":"任务计划管理","description":"","frontmatter":{},"headers":[],"relativePath":"orbitcontrol/user-guide/planning.md","filePath":"orbitcontrol/user-guide/planning.md"}'),T={name:"orbitcontrol/user-guide/planning.md"};function x(k,i,w,S,F,A){const n=e("PluginTabsTab"),s=e("PluginTabs");return p(),c("div",null,[i[2]||(i[2]=r('<h1 id="任务计划管理" tabindex="-1">任务计划管理 <a class="header-anchor" href="#任务计划管理" aria-label="Permalink to &quot;任务计划管理&quot;">​</a></h1><h2 id="任务-mission" tabindex="-1">任务 Mission <a class="header-anchor" href="#任务-mission" aria-label="Permalink to &quot;任务 Mission&quot;">​</a></h2><h3 id="任务列表" tabindex="-1">任务列表 <a class="header-anchor" href="#任务列表" aria-label="Permalink to &quot;任务列表&quot;">​</a></h3><p>点击 <code>菜单</code> -&gt; <code>任务</code> 会如下显示 <code>任务列表面板</code>：</p><p><img src="'+h+'" alt=""></p><ul><li>可根据任务名称、任务标签、任务类型进行筛选</li><li>任务卡片中显示简要信息，包括： <ul><li>任务类型（使用不同图标表示，<img src="'+g+'" alt=""> 表示路径任务，<img src="'+m+'" alt=""> 表示网格任务）</li><li>任务名称</li><li>预计完成时长</li><li>航点数</li><li>所属站点</li></ul></li></ul><h3 id="新建任务" tabindex="-1">新建任务 <a class="header-anchor" href="#新建任务" aria-label="Permalink to &quot;新建任务&quot;">​</a></h3><h4 id="_1-以手动添加航点的方式新建任务" tabindex="-1">1. 以手动添加航点的方式新建任务 <a class="header-anchor" href="#_1-以手动添加航点的方式新建任务" aria-label="Permalink to &quot;1. 以手动添加航点的方式新建任务&quot;">​</a></h4><p>点击 <code>任务列表面板</code> 中的 <img src="'+d+'" alt=""> 按钮，弹出 <code>任务新建面板</code>：</p><p><img src="'+_+'" alt=""></p><ul><li>填写任务名称</li><li>任务标签 ( Tag )</li><li>选择站点</li><li>配置航线参数和航点参数</li></ul>',11)),a(s,null,{default:o(()=>[a(n,{label:"航线参数"},{default:o(()=>i[0]||(i[0]=[l("p",null,"航线参数是指整个任务期间的公共参数，包括：",-1),l("ol",null,[l("li",null,"巡航速度，任务执行期间设备的运行速度"),l("li",null,[t("云台控制 "),l("ul",null,[l("li",null,[t("设置为 "),l("code",null,"使用航点设置"),t(" 表示不设公共参数，使用各航点的个性化参数")]),l("li",null,"设置具体的云台角度，表示任务期间始终保持同个角度")])]),l("li",null,[t("结束后动作 "),l("ul",null,[l("li",null,[t("返回 "),l("code",null,"Home")]),l("li",null,"返回充电点并充电"),l("li",null,"原地待命")])])],-1)])),_:1}),a(n,{label:"航点参数"},{default:o(()=>i[1]||(i[1]=[l("p",null,"航点参数是指每个具体航点的相关配置，主要包括航点位置和到达航点后的动作配置。",-1),l("ol",null,[l("li",null,[t("取航点位置，有两种方式 "),l("ul",null,[l("li",null,[t("点击 "),l("img",{src:d,alt:""}),t(" 按钮，然后在地图上选择")]),l("li",null,[t("点击 "),l("img",{src:b,alt:""}),t(" 按钮，获取设备当前位置（与 "),l("code",null,"手动控制"),t(" 配合使用，可避免手动地图取点造成的误差）")])])]),l("li",null,[t("取点后，配置执行动作，在实际任务执行中，动作在到达航点后触发，支持的动作包括："),l("table",{tabindex:"0"},[l("thead",null,[l("tr",null,[l("th",null,"设备"),l("th",null,"动作"),l("th",null,"说明")])]),l("tbody",null,[l("tr",null,[l("td",null,"车辆"),l("td",null,"设置停留时长"),l("td",null,"配置：时长")]),l("tr",null,[l("td"),l("td",null,"执行充电操作"),l("td")]),l("tr",null,[l("td",null,"云台"),l("td",null,"设置云台角度"),l("td",null,"配置：Pitch、Yaw")]),l("tr",null,[l("td",null,"相机"),l("td",null,"变焦"),l("td",null,"配置：焦距")]),l("tr",null,[l("td"),l("td",null,"开始抓拍"),l("td",null,"配置：间隔、张数")]),l("tr",null,[l("td"),l("td",null,"开始录像"),l("td",null,"配置：时长")])])])])],-1)])),_:1})]),_:1}),i[3]||(i[3]=r('<h4 id="_2-以录制方式新建任务" tabindex="-1">2. 以录制方式新建任务 <a class="header-anchor" href="#_2-以录制方式新建任务" aria-label="Permalink to &quot;2. 以录制方式新建任务&quot;">​</a></h4><p>用户按照预设的任务目标，实际操作，平台根据用户操作，记录过程中的航点、设备/载荷的行为动作，自动生成任务配置。</p><p>录制方式的优势在于，可以根据实际场景，更好地还原任务过程，例如：在仪表检查任务中，人为很难确定云台的精确角度，通过录制的方式更容易操作。</p><p>如下图，点击录制按钮，开始录制，任务结束后，再次点击停止录制：</p><p><img src="'+f+'" alt=""></p><p>停止后，系统自动生成任务，并跳转到任务编辑页面，用户补充任务名称、按需编辑其他参数，点击保存，即可完成任务设置。</p><h2 id="调度-scheduled" tabindex="-1">调度 Scheduled <a class="header-anchor" href="#调度-scheduled" aria-label="Permalink to &quot;调度 Scheduled&quot;">​</a></h2><p>根据时间和时间周期，配置任务自动化执行策略。</p><p>主页面如下图所示：</p><p><img src="'+q+'" alt=""></p><ol><li>时间导航：快速定位到 <code>今天</code>，前后翻页，日期选择器等</li><li>调度配置按钮，点击后打开新建窗口，填写任务名称、选择执行设备和任务、选择开始时间/重复周期/结束时间等（<strong>快捷方式</strong>：点击日历中的窗格，自动获取当前窗格对应的日期时间作为开始时间，继续编辑同样可以完成调度配置）</li></ol><p><img src="'+P+'" alt=""></p><ol start="3"><li>日历视图切换</li><li>颜色标签：用来表示不同的调度阶段，在日历窗格中，已竖线的样式进行展示，快速区分各任务的执行情况。</li></ol><h2 id="自动化流程-flows" tabindex="-1">自动化流程 Flows <a class="header-anchor" href="#自动化流程-flows" aria-label="Permalink to &quot;自动化流程 Flows&quot;">​</a></h2><p>自动化流程是 OrbitControl 中的一项动态功能，旨在通过配置，使设备可以对特定告警进行响应，执行预定动作（可在人工审核后执行，也可自动执行），从而提升作业效率。</p><p>系统还支持通过电子邮件或短信通知，便于组织内指定成员及时掌握无人机的运行动态，显著提升在应急响应、安全巡检及基础设施监控等领域的响应效率，降低了反应时间和对人工干预的依赖。</p><p>// TODO 原型待补充</p><h3 id="触发条件-trigger" tabindex="-1">触发条件 Trigger <a class="header-anchor" href="#触发条件-trigger" aria-label="Permalink to &quot;触发条件 Trigger&quot;">​</a></h3><p>包括告警、通知、传感器数据条件等</p><h3 id="响应模式-response-mode" tabindex="-1">响应模式 Response Mode <a class="header-anchor" href="#响应模式-response-mode" aria-label="Permalink to &quot;响应模式 Response Mode&quot;">​</a></h3><ul><li>手动，弹出提示，等待人工确认</li><li>自动</li></ul><h3 id="动作-action" tabindex="-1">动作 Action <a class="header-anchor" href="#动作-action" aria-label="Permalink to &quot;动作 Action&quot;">​</a></h3><p>可配置到动作包括有：</p><ol><li>同 <code>任务 Mission</code>，参考：任务配置中的 <code>航点参数</code></li><li>系统通知 <ul><li>邮件</li><li>短信</li></ul></li></ol><p>支持配置动作序列，按顺序执行。</p><h3 id="与-failsafe-的区别" tabindex="-1">与 Failsafe 的区别 <a class="header-anchor" href="#与-failsafe-的区别" aria-label="Permalink to &quot;与 Failsafe 的区别&quot;">​</a></h3><p>Failsafe（故障保护） 是一种安全机制，用于在关键异常发生时自动执行预设动作，以避免设备损毁或造成安全事故。</p><p>与自动化流程在概念上会有一定的相似性，所以特说明如下：</p><table tabindex="0"><thead><tr><th>功能机制</th><th>Failsafe（故障保护）</th><th>Flows（自动化流程）</th></tr></thead><tbody><tr><td><strong>定位</strong></td><td>设备级安全策略</td><td>流程级事件驱动任务</td></tr><tr><td><strong>配置位置</strong></td><td>设备设置菜单中</td><td>Planning → Flows</td></tr><tr><td><strong>触发方式</strong></td><td>异常触发（紧急、中断）</td><td>条件触发（事件/告警）</td></tr><tr><td><strong>执行行为</strong></td><td>自动应急响应（如返航、降落）</td><td>执行组合任务（如报警、调度）</td></tr><tr><td><strong>是否依赖对方</strong></td><td>自主，不依赖 Flows</td><td>可调用，但非必须</td></tr></tbody></table>',29))])}const v=u(T,[["render",x]]);export{V as __pageData,v as default};
