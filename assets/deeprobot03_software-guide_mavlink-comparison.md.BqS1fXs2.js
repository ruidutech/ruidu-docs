import{_ as o,C as i,c as a,o as r,ae as g,j as t,G as s,w as d,a as e}from"./chunks/framework.Asma3tvo.js";const D=JSON.parse('{"title":"MAVLink 协议对照关系","description":"","frontmatter":{},"headers":[],"relativePath":"deeprobot03/software-guide/mavlink-comparison.md","filePath":"deeprobot03/software-guide/mavlink-comparison.md"}'),f={name:"deeprobot03/software-guide/mavlink-comparison.md"},u={tabindex:"0"},x={style:{"text-align":"left"}},y={style:{"text-align":"left"}},T={style:{"text-align":"left"}},b={style:{"text-align":"left"}},m={tabindex:"0"},S={style:{"text-align":"left"}},A={style:{"text-align":"left"}},I={style:{"text-align":"left"}},M={tabindex:"0"},N={style:{"text-align":"left"}},k={style:{"text-align":"left"}},O={tabindex:"0"},p={style:{"text-align":"left"}},L={style:{"text-align":"left"}};function C(_,l,E,R,V,v){const n=i("nobr");return r(),a("div",null,[l[49]||(l[49]=g('<h1 id="mavlink-协议对照关系" tabindex="-1">MAVLink 协议对照关系 <a class="header-anchor" href="#mavlink-协议对照关系" aria-label="Permalink to &quot;MAVLink 协议对照关系&quot;">​</a></h1><p>本文档详细说明当前基于 MQTT 的 RTK 开源导航协议与标准 MAVLink 协议之间的对照关系，便于协议转换和系统集成。</p><blockquote><p>Mavlink 协议的具体说明可参考：<a href="https://mavlink.io/en/messages/common.html" target="_blank" rel="noreferrer">https://mavlink.io/en/messages/common.html</a></p></blockquote><h2 id="协议概述对比" tabindex="-1">协议概述对比 <a class="header-anchor" href="#协议概述对比" aria-label="Permalink to &quot;协议概述对比&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">项目</th><th style="text-align:left;">RTK 导航协议</th><th style="text-align:left;">MAVLink 协议</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>通信方式</strong></td><td style="text-align:left;">MQTT 3.3</td><td style="text-align:left;">点对点串行通信</td></tr><tr><td style="text-align:left;"><strong>传输介质</strong></td><td style="text-align:left;">TCP/IP (端口1883)</td><td style="text-align:left;">UART/UDP/TCP</td></tr><tr><td style="text-align:left;"><strong>消息格式</strong></td><td style="text-align:left;">JSON</td><td style="text-align:left;">二进制</td></tr><tr><td style="text-align:left;"><strong>消息确认</strong></td><td style="text-align:left;">MQTT QoS</td><td style="text-align:left;">内置ACK机制</td></tr><tr><td style="text-align:left;"><strong>多系统支持</strong></td><td style="text-align:left;">MQTT主题订阅</td><td style="text-align:left;">SystemID/ComponentID</td></tr><tr><td style="text-align:left;"><strong>实时性</strong></td><td style="text-align:left;">依赖网络延迟</td><td style="text-align:left;">低延迟</td></tr></tbody></table><h2 id="状态类消息对照表" tabindex="-1">状态类消息对照表 <a class="header-anchor" href="#状态类消息对照表" aria-label="Permalink to &quot;状态类消息对照表&quot;">​</a></h2>',6)),t("table",u,[t("thead",null,[t("tr",null,[t("th",x,[s(n,null,{default:d(()=>l[0]||(l[0]=[e("消息类型")])),_:1})]),l[2]||(l[2]=t("th",{style:{"text-align":"left"}},"RTK导航协议",-1)),l[3]||(l[3]=t("th",{style:{"text-align":"left"}},"MAVLink协议",-1)),t("th",y,[s(n,null,{default:d(()=>l[1]||(l[1]=[e("对照关系说明")])),_:1})])])]),t("tbody",null,[t("tr",null,[l[5]||(l[5]=t("td",{style:{"text-align":"left"}},[t("strong",null,"系统状态")],-1)),l[6]||(l[6]=t("td",{style:{"text-align":"left"}},[t("code",null,"base_status")],-1)),l[7]||(l[7]=t("td",{style:{"text-align":"left"}},[t("code",null,"HEARTBEAT(0)"),e(" + "),t("code",null,"SYS_STATUS(1)")],-1)),t("td",T,[s(n,null,{default:d(()=>l[4]||(l[4]=[e("RTK单一消息包含多种状态，"),t("br",null,null,-1),e("MAVLink分为心跳和系统状态两个消息")])),_:1})])]),l[12]||(l[12]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"位置信息")]),t("td",{style:{"text-align":"left"}},[t("code",null,"base_status.pose")]),t("td",{style:{"text-align":"left"}},[t("code",null,"LOCAL_POSITION_NED(32)")]),t("td",{style:{"text-align":"left"}},"本地坐标系位置信息")],-1)),l[13]||(l[13]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"全球定位")]),t("td",{style:{"text-align":"left"}},[t("code",null,"base_status.rtk")]),t("td",{style:{"text-align":"left"}},[t("code",null,"GPS_RAW_INT(24)"),e(" + "),t("code",null,"GLOBAL_POSITION_INT(33)")]),t("td",{style:{"text-align":"left"}},"RTK定位对应GPS原始数据和全球位置")],-1)),l[14]||(l[14]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"姿态信息")]),t("td",{style:{"text-align":"left"}},[t("code",null,"base_status.pose.yaw")]),t("td",{style:{"text-align":"left"}},[t("code",null,"ATTITUDE(30)"),e(" + "),t("code",null,"ATTITUDE_QUATERNION(31)")]),t("td",{style:{"text-align":"left"}},"姿态角度信息，MAVLink支持欧拉角和四元数")],-1)),l[15]||(l[15]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"速度信息")]),t("td",{style:{"text-align":"left"}},[t("code",null,"base_status.robot.vx/vy/vz")]),t("td",{style:{"text-align":"left"}},[t("code",null,"LOCAL_POSITION_NED(32).vx/vy/vz")]),t("td",{style:{"text-align":"left"}},"三轴速度信息直接对应")],-1)),l[16]||(l[16]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"电池状态")]),t("td",{style:{"text-align":"left"}},[t("code",null,"base_status.bms")]),t("td",{style:{"text-align":"left"}},[t("code",null,"BATTERY_STATUS(147)")]),t("td",{style:{"text-align":"left"}},"电池相关信息对应")],-1)),t("tr",null,[t("td",b,[s(n,null,{default:d(()=>l[8]||(l[8]=[t("strong",null,"传感器状态",-1)])),_:1})]),l[9]||(l[9]=t("td",{style:{"text-align":"left"}},[t("code",null,"base_status.sensor")],-1)),l[10]||(l[10]=t("td",{style:{"text-align":"left"}},[t("code",null,"SYS_STATUS(1)"),e(" 传感器位掩码")],-1)),l[11]||(l[11]=t("td",{style:{"text-align":"left"}},"传感器健康状态对应",-1))])])]),l[50]||(l[50]=t("h2",{id:"控制命令类消息对照表",tabindex:"-1"},[e("控制命令类消息对照表 "),t("a",{class:"header-anchor",href:"#控制命令类消息对照表","aria-label":'Permalink to "控制命令类消息对照表"'},"​")],-1)),t("table",m,[t("thead",null,[t("tr",null,[t("th",S,[s(n,null,{default:d(()=>l[17]||(l[17]=[e("消息类型")])),_:1})]),l[19]||(l[19]=t("th",{style:{"text-align":"left"}},"RTK导航协议",-1)),l[20]||(l[20]=t("th",{style:{"text-align":"left"}},"MAVLink协议",-1)),t("th",A,[s(n,null,{default:d(()=>l[18]||(l[18]=[e("对照关系说明")])),_:1})])])]),t("tbody",null,[t("tr",null,[l[22]||(l[22]=t("td",{style:{"text-align":"left"}},[t("strong",null,"轨迹管理")],-1)),l[23]||(l[23]=t("td",{style:{"text-align":"left"}},[t("code",null,"trajectory_control")],-1)),l[24]||(l[24]=t("td",{style:{"text-align":"left"}},[t("code",null,"MISSION_*"),e(" 系列消息")],-1)),t("td",I,[s(n,null,{default:d(()=>l[21]||(l[21]=[e("轨迹管理对应任务管理")])),_:1})])]),l[25]||(l[25]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"任务控制")]),t("td",{style:{"text-align":"left"}},[t("code",null,"task_control")]),t("td",{style:{"text-align":"left"}},[t("code",null,"COMMAND_LONG(76)"),e(" + "),t("code",null,"COMMAND_INT(75)")]),t("td",{style:{"text-align":"left"}},"任务命令对应MAVLink命令协议")],-1)),l[26]||(l[26]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"速度控制")]),t("td",{style:{"text-align":"left"}},[t("code",null,"manual_control.cmd_vel")]),t("td",{style:{"text-align":"left"}},[t("code",null,"MANUAL_CONTROL(69)")]),t("td",{style:{"text-align":"left"}},"手动速度控制直接对应")],-1)),l[27]||(l[27]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"急停控制")]),t("td",{style:{"text-align":"left"}},[t("code",null,"manual_control.terminate")]),t("td",{style:{"text-align":"left"}},[t("code",null,"MAV_CMD_DO_FLIGHTTERMINATION")]),t("td",{style:{"text-align":"left"}},"急停对应飞行终止命令")],-1))])]),l[51]||(l[51]=t("h3",{id:"轨迹管理",tabindex:"-1"},[e("轨迹管理 "),t("a",{class:"header-anchor",href:"#轨迹管理","aria-label":'Permalink to "轨迹管理"'},"​")],-1)),t("table",M,[l[38]||(l[38]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"功能"),t("th",{style:{"text-align":"left"}},"RTK导航协议"),t("th",{style:{"text-align":"left"}},"MAVLink协议"),t("th",{style:{"text-align":"left"}},"对照关系说明")])],-1)),t("tbody",null,[t("tr",null,[t("td",N,[s(n,null,{default:d(()=>l[28]||(l[28]=[t("strong",null,"获取轨迹列表",-1)])),_:1})]),l[29]||(l[29]=t("td",{style:{"text-align":"left"}},[t("code",null,"get_all_trajectory")],-1)),l[30]||(l[30]=t("td",{style:{"text-align":"left"}},[t("code",null,"MISSION_REQUEST_LIST(43)")],-1)),l[31]||(l[31]=t("td",{style:{"text-align":"left"}},"请求任务列表",-1))]),l[36]||(l[36]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"保存轨迹")]),t("td",{style:{"text-align":"left"}},[t("code",null,"save_trajectory")]),t("td",{style:{"text-align":"left"}},[t("code",null,"MISSION_COUNT(44)"),e(" + "),t("code",null,"MISSION_ITEM_INT(73)")]),t("td",{style:{"text-align":"left"}},"上传任务序列")],-1)),l[37]||(l[37]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"删除轨迹")]),t("td",{style:{"text-align":"left"}},[t("code",null,"delete_trajectory")]),t("td",{style:{"text-align":"left"}},[t("code",null,"MISSION_CLEAR_ALL(45)")]),t("td",{style:{"text-align":"left"}},"清除任务")],-1)),t("tr",null,[l[33]||(l[33]=t("td",{style:{"text-align":"left"}},[t("strong",null,"轨迹反馈")],-1)),l[34]||(l[34]=t("td",{style:{"text-align":"left"}},[t("code",null,"trajectory_data")],-1)),l[35]||(l[35]=t("td",{style:{"text-align":"left"}},[t("code",null,"MISSION_ITEM_INT(73)"),e(" 数组")],-1)),t("td",k,[s(n,null,{default:d(()=>l[32]||(l[32]=[e("轨迹点数据对应任务项")])),_:1})])])])]),l[52]||(l[52]=t("h3",{id:"任务控制",tabindex:"-1"},[e("任务控制 "),t("a",{class:"header-anchor",href:"#任务控制","aria-label":'Permalink to "任务控制"'},"​")],-1)),t("table",O,[l[48]||(l[48]=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"功能"),t("th",{style:{"text-align":"left"}},"RTK导航协议"),t("th",{style:{"text-align":"left"}},"MAVLink协议"),t("th",{style:{"text-align":"left"}},"对照关系说明")])],-1)),t("tbody",null,[l[47]||(l[47]=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("strong",null,"启动循迹")]),t("td",{style:{"text-align":"left"}},[t("code",null,"start_task")]),t("td",{style:{"text-align":"left"}},[t("code",null,"MISSION_SET_CURRENT(41)"),e(" + "),t("code",null,"MAV_CMD_MISSION_START")]),t("td",{style:{"text-align":"left"}},"开始执行任务")],-1)),t("tr",null,[l[40]||(l[40]=t("td",{style:{"text-align":"left"}},[t("strong",null,"取消循迹")],-1)),l[41]||(l[41]=t("td",{style:{"text-align":"left"}},[t("code",null,"cancel_task")],-1)),l[42]||(l[42]=t("td",{style:{"text-align":"left"}},[t("code",null,"MAV_CMD_DO_PAUSE_CONTINUE")],-1)),t("td",p,[s(n,null,{default:d(()=>l[39]||(l[39]=[e("暂停/继续任务")])),_:1})])]),t("tr",null,[t("td",L,[s(n,null,{default:d(()=>l[43]||(l[43]=[t("strong",null,"RTK归零",-1)])),_:1})]),l[44]||(l[44]=t("td",{style:{"text-align":"left"}},[t("code",null,"init_rtk_data")],-1)),l[45]||(l[45]=t("td",{style:{"text-align":"left"}},[t("code",null,"MAV_CMD_DO_SET_HOME")],-1)),l[46]||(l[46]=t("td",{style:{"text-align":"left"}},"设置Home点",-1))])])])])}const U=o(f,[["render",C]]);export{D as __pageData,U as default};
